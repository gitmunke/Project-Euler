# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?
# factors > 500 including 1 & itself

# largest factor is n/2, but if you check n/i & n/i*2 at same time
# like 28 % 2 != 0, so add 2 to count of divisors. 

def is_prime(num):
    if num == 1:
        return False
    if num == 2:
        return True
    if num % 2 == 0:
        return False
    for x in range(2, num):
        if x * x > num:
            break
        if num % x == 0:
            return False
     
    return True
import math

tn = 0
for i in range(1000000000): #generation
    div = 0
    tn += i + 1
    for x in range(1, tn): # counting divisors
        if x * x > tn:
            break
        if tn % x == 0:
            div += 2
            if div > 500:
                print(tn)
                break