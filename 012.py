# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?
# factors > 500 including 1 & itself

# largest factor is n/2, but if you check n/i & n/i*2 at same time
# like 28 % 2 != 0, so add 2 to count of divisors. 
import math


def howManyDivisors(num) :
    if num == 1 :
        return 1
    divCount = 2
    for i in range(2, int(math.sqrt(num)+1)) :
        if num % i == 0 :
            divCount += 2
    return divCount


# Find triangular numbers
num = 0
for i in range(1, 15000) :
    num += i
    if num % 2 == 0 :
        if (howManyDivisors(num) > 500) :
            print(num)
            break

